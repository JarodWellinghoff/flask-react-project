# docker-compose.production.yml
version: "3.8"

services:
  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - calc_network

  backend:
    image: ${DOCKER_REGISTRY}/calc-backend:${VERSION:-latest}
    restart: always
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - calc_network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  celery:
    image: ${DOCKER_REGISTRY}/calc-backend:${VERSION:-latest}
    restart: always
    command: celery -A celery_worker.celery worker --loglevel=info --concurrency=4
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - calc_network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "1"
          memory: 1G

  frontend:
    image: ${DOCKER_REGISTRY}/calc-frontend:${VERSION:-latest}
    restart: always
    networks:
      - calc_network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.25"
          memory: 256M

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - calc_network

volumes:
  redis_data:

networks:
  calc_network:
    driver: bridge
